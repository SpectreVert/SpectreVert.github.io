/* CRT monitor animation inspired from codepen.io/lbebber */

.power-label::after { content: "< power on >"; }
#power-switch:checked ~ header > nav > div > .power-label::after { content: "< power off >"; }

#power-switch ~ .monitor {
  animation: turn-off 0.55s cubic-bezier(0.230, 1.000, 0.320, 1.000);
  animation-fill-mode: forwards;
}

#power-switch:checked ~ .monitor {
  animation: turn-on 4s linear;
  animation-fill-mode: forwards;
}

@keyframes turn-on {
  0% {
      transform: scale(1,0.8) translate3d(0,0,0);
      filter: brightness(30);
      opacity: 1;
  }

  3.5% {
      transform: scale(1,0.8) translate3d(0,100%,0);
  }

  3.6% {
      transform: scale(1,0.8) translate3d(0,-100%,0);
      opacity: 1;
  } 

  9% {
      transform: scale(1.3,0.6) translate3d(0,100%,0);
      filter: brightness(30);
      opacity: 0;
  }

  11% {
      transform: scale(1,1) translate3d(0,0,0);
      filter: contrast(0) brightness(0);
      opacity: 0;
  }

  100% {
      transform: scale(1,1) translate3d(0,0,0);
      filter: contrast(1) brightness(1.2) saturate(1.3);
      opacity: 1;
  }   
}

@keyframes turn-off {
  0% {
      transform: scale(1,1.3) translate3d(0,0,0);
      filter: brightness(1);
      opacity: 1;
  }
  
  60% {
      transform: scale(1.3,0.001) translate3d(0,0,0);
      filter: brightness(10);
  }
  
  100% {
      animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.0600);
      transform: scale(0.000,0.0001) translate3d(0,0,0);
      filter: brightness(50);
  }
}

/* glith effect */

.glitch {
  position: relative;
  margin: 0 auto;
}

.glitch:not(:hover)::before, .glitch:not(:hover)::after {
  content: attr(data-text);
  position: absolute;
  overflow: hidden;
  color: inherit;
  background-color: inherit;
}

.glitch:not(:hover)::before {
  left: 3px;
  text-shadow: -2px 0 #FF0000;
  animation-name: glitch-1;
  animation-duration: 2s;
  animation-timing-function: linear;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-direction: reverse-alternate;
}

.glitch:not(:hover)::after {
  left: -3px;
  text-shadow: -2px 0 #0000FF;
  animation-name: glitch-2;
  animation-duration: 2s;
  animation-timing-function: linear;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-direction: reverse-alternate;
}

@keyframes glitch-1 {
  $steps: 20;

  @for $i from 0 through $steps {
    #{ percentage($i * (1 / $steps)) } {
      clip: rect(random(150)+px, 350px, random(150)+px, 30px)
    }
  }
}

@keyframes glitch-2 {
  $steps: 20;
 
  @for $i from 0 through $steps { 
    #{ percentage($i * (1 / $steps)) } {
      clip: rect(random(150)+px, 350px, random(150)+px, 30px)
    }
  } 
}